# ===============================
# =  SERVER CONFIGURATION       =
# ===============================
spring.application.name=travel-mate-backend
server.port=8080

# ===============================
# =  DATA SOURCE CONFIGURATION  =
# ===============================
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===============================
# =  LOGGING OPTIONS            =
# ===============================
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# =  CORS CONFIG (Frontend <-> Backend) =
# ===============================
# Allow React frontend running on port 3000
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# ===============================
# =  WEBSOCKET (Collaborative Editing) =
# ===============================
spring.websocket.enabled=true

# ===============================
# =  AI INTEGRATION (OpenAI)    =
# ===============================
# Use environment variable for security
# openai.api.key=${OPENAI_API_KEY}
# openai.api.url=https://api.openai.com/v1/chat/completions

# ===============================
# =  OFFLINE SUPPORT (Cache Headers) =
# ===============================
spring.web.resources.cache.period=3600

# Weather API Configuration
openweather.api.key=your_actual_api_key_here

# Eventbrite API Configuration  
eventbrite.api.key=your_actual_api_key_here

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=30m

# Enable caching
spring.cache.cache-names=weather,events